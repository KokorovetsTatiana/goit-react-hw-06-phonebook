{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Phonebook/Phonebook.module.css","components/Section/Section.js","redux/contacts/contacts-actions.js","components/Form/Form.js","redux/contacts/contacts-selectors.js","components/FilterField/FilterField.js","components/ContactsList/ContactsList.js","components/Phonebook/Phonebook.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Section","title","children","addContact","createAction","deleteContact","updateFilter","connect","state","items","contacts","dispatch","item","useState","name","setName","phone","setPhone","handleInputChange","currentTarget","value","checkContact","contact","nameNormalized","toLowerCase","dublicateContactByName","find","alert","id","uuidv4","onSubmit","e","preventDefault","trim","className","s","Form","Label","type","onChange","Input","buttonSubmit","getItems","getFilterValue","filter","FilterField","useSelector","useDispatch","target","ContactsList","actions","length","filteredContacts","filtered","includes","filteredList","map","Item","onClick","Button","filteredContactsShow","Phonebook","App","itemsReducer","createReducer","action","payload","filterReducer","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ea077f2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"ContactsList_Item__1br8T\",\"Button\":\"ContactsList_Button__2ho5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Phonebook\":\"Phonebook_Phonebook__heDKC\"};","import React from \"react\";\n\nconst Section = ({ title, children }) => (\n  <section>\n    {title && <h2>{title}</h2>}\n    {children}\n  </section>\n);\nexport default Section;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"phonebook/addContact\");\n\nexport const deleteContact = createAction(\"phonebook/deleteContact\");\n\nexport const updateFilter = createAction(\"phonebook/updateFilter\");\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport s from \"./Form.module.css\";\n\nfunction Form({ addContact, items }) {\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const resetState = () => {\n    setName(\"\");\n    setPhone(\"\");\n  };\n\n  const handleInputChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    if (name === \"name\") {\n      setName(value);\n      return;\n    }\n    setPhone(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkContact({\n      name: name.trim(),\n      phone: phone.trim(),\n    });\n  };\n\n  const checkContact = (contact) => {\n    const { name, phone } = contact;\n    if (name === \"\" || phone === \"\") {\n      alert(\"Please fill in the form!\");\n      return;\n    }\n    const nameNormalized = name.toLowerCase();\n\n    const dublicateContactByName = items.find(\n      ({ name }) => name.toLowerCase() === nameNormalized\n    );\n    if (dublicateContactByName) {\n      alert(`${dublicateContactByName.name} is already in contacts.`);\n      return;\n    }\n    contact.id = uuidv4();\n    addContact(contact);\n    resetState();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.Form}>\n      <label className={s.Label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          className={s.Input}\n        />\n      </label>\n      <label className={s.Label}>\n        Phone number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleInputChange}\n          className={s.Input}\n        />\n      </label>\n      <button type=\"submit\" className={s.buttonSubmit}>\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (item) => dispatch(addContact(item)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","export const getItems = (state) => state.contacts.items;\nexport const getFilterValue = (state) => state.contacts.filter;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { updateFilter } from \"../../redux/contacts/contacts-actions\";\nimport { getFilterValue } from \"../../redux/contacts/contacts-selectors\";\n\nimport s from \"../Form/Form.module.css\";\n\nexport default function FilterField() {\n  const value = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = (e) => {\n    return dispatch(updateFilter(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleFilter}\n        className={s.Input}\n      />\n    </div>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../redux/contacts/contacts-actions\";\nimport FilterField from \"../FilterField/FilterField\";\nimport {\n  getItems,\n  getFilterValue,\n} from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactsList.module.css\";\n\nfunction ContactsList() {\n  const items = useSelector(getItems);\n  const filter = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  const deleteContact = (e) => dispatch(actions.deleteContact(e.target.id));\n\n  const filteredList = () => {\n    if (items.length === 0) return;\n\n    const filtered = items.filter(({ name }) => {\n      const nameNormalized = name.toLowerCase();\n\n      return nameNormalized.includes(filter.trim());\n    });\n\n    return filtered.length > 0 ? filtered : false;\n  };\n\n  const filteredContactsShow = (filteredContacts) => {\n    return filteredContacts.map(({ id, name, phone }) => (\n      <li key={id} className={s.Item}>\n        {name}: {phone}\n        <button id={id} onClick={deleteContact} className={s.Button}>\n          Delete\n        </button>\n      </li>\n    ));\n  };\n  if (items.length <= 0) return <p>Contact list is empty</p>;\n  const filteredContacts = filteredList();\n  return (\n    <div>\n      {items.length > 0 && (\n        <div>\n          <p>Find contact by name</p>\n          <FilterField />\n        </div>\n      )}\n\n      <ul>\n        {filteredContacts ? (\n          filteredContactsShow(filteredContacts)\n        ) : (\n          <p>Nothing found!</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default ContactsList;\n","import Section from \"../Section/Section\";\nimport Form from \"../Form/Form\";\nimport ContactsList from \"../ContactsList/ContactsList\";\n\nimport s from \"./Phonebook.module.css\";\n\nfunction Phonebook() {\n  return (\n    <div className={s.Phonebook}>\n      <Section title={\"Phonebook\"}>\n        <Form />\n        <Section title={\"Contacts\"}>\n          <ContactsList />\n        </Section>\n      </Section>\n    </div>\n  );\n}\n\nexport default Phonebook;\n","import Phonebook from \"./components/Phonebook/Phonebook\";\n\nfunction App() {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport * as actions from \"./contacts-actions\";\n\nconst itemsReducer = createReducer([], {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter((item) => item.id !== action.payload),\n});\n\nconst filterReducer = createReducer(\"\", {\n  [actions.updateFilter]: (_, action) => action.payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import contactsReducer from \"./contacts/contacts-reducer\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst contactsPersistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__3J_b1\",\"buttonSubmit\":\"Form_buttonSubmit__22mT8\",\"Label\":\"Form_Label__27QTP\",\"Input\":\"Form_Input__3guNu\"};"],"sourceRoot":""}